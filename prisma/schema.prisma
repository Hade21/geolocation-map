generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String     @id
  username    String     @unique @db.VarChar(100)
  firstName   String     @db.VarChar(100)
  lastName    String     @db.VarChar(100)
  password    String     @db.VarChar(100)
  role        Role       @default(USER)
  email       String     @db.VarChar(100)
  profilePict String?    @db.Text()
  locations   Location[]
  units       Unit[]

  AuthLog AuthLog[]

  @@map("users")
}

model Unit {
  id        String     @id
  name      String     @db.VarChar(100)
  type      String     @db.VarChar(100)
  egi       String     @db.VarChar(100)
  createdBy String     @db.VarChar(100)
  locations Location[]
  users     User?      @relation(fields: [createdBy], references: [id])

  @@map("units")
}

model Location {
  id        String   @id
  long      String   @db.VarChar(100)
  lat       String   @db.VarChar(100)
  alt       String   @db.VarChar(100)
  location  String   @db.VarChar(100)
  dateTime  DateTime @db.Timestamp(6)
  unitId    String   @db.VarChar(100)
  createdBy String   @db.VarChar(100)
  users     User     @relation(fields: [createdBy], references: [id])
  units     Unit     @relation(fields: [unitId], references: [id])

  @@map("locations")
}

model AuthLog {
  id                 String    @id @default(uuid())
  userId             String    @db.VarChar(100)
  timeStamp          DateTime  @db.Timestamp(6)
  refreshToken       String?   @db.VarChar(100)
  refreshTokenExpiry DateTime? @db.Timestamp(6)
  resetToken         String?   @db.VarChar(100)
  resetTokenExpiry   DateTime? @db.Timestamp(6)
  users              User      @relation(fields: [userId], references: [id])

  @@map("authLogs")
}

enum Role {
  USER
  ADMIN
}
